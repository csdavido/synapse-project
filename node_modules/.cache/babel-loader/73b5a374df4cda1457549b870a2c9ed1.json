{"ast":null,"code":"var _jsxFileName = \"/Users/reuben/Desktop/school/osu/capstone/synapse-project/src/pages/pub.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport '../css/pub.css';\nimport logo from '../public/home/logo.png';\nimport text from '../public/home/text.png';\nimport { SYNAPSE_ABI, SYNAPSE_ADDRESS } from '../config';\nimport { PROFILE_ABI, PROFILE_ADDRESS } from '../config';\nimport { FOLLOW_ABI, FOLLOW_ADDRESS } from '../config';\nimport Thought from '../createThought';\nimport Thoughts from '../thoughts';\nimport ChangeHandle from '../changeHandle';\nimport Logo from '../components/logo.js';\n\nfunction isInstalled() {\n  if (typeof Web3 !== 'undefined') {\n    console.log('MetaMask is installed');\n  } else {\n    console.log('MetaMask is not installed');\n  }\n}\n\nfunction isLocked(web3) {\n  web3.eth.getAccounts(function (err, accounts) {\n    if (err != null) {\n      console.log(err);\n    } else if (accounts.length === 0) {\n      console.log('MetaMask is locked');\n    } else {\n      console.log('MetaMask is unlocked');\n    }\n  });\n}\n\nclass Public extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.getOwnHandle();\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    document.title = \"Synapse App\";\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  async loadBlockchainData() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\"); //const web3 = new Web3(window.web3.currentProvider);\n\n    isInstalled();\n    isLocked(web3); //await ethereum.enable();\n\n    const synapse = new web3.eth.Contract(SYNAPSE_ABI, SYNAPSE_ADDRESS);\n    const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS);\n    const follow = new web3.eth.Contract(FOLLOW_ABI, FOLLOW_ADDRESS);\n    this.setState({\n      follow\n    });\n    const accounts = await web3.eth.getAccounts();\n    const balanceWei = await web3.eth.getBalance(accounts[0]);\n    this.setState({\n      profile\n    });\n    this.setState({\n      thoughtCount\n    });\n    var balance = balanceWei / 1000000000000000000;\n    var thoughtCount = await profile.methods.thoughtCount().call();\n    const latestCall = await profile.methods.thoughts(thoughtCount - 1).call();\n    const latest = latestCall.thought;\n\n    if (thoughtCount < 5) {\n      for (var i = thoughtCount - 1; i >= 0; i--) {\n        const singleThought = await profile.methods.thoughts(i).call();\n        this.setState({\n          thoughts: [...this.state.thoughts, singleThought] //thoughts: [...this.setState({thoughts: [...this.state.thoughts, singleThought]})]\n\n        });\n      }\n    } else {\n      for (var i = thoughtCount - 1; i >= thoughtCount - 5; i--) {\n        const singleThought = await profile.methods.thoughts(i).call();\n        this.setState({\n          thoughts: [...this.state.thoughts, singleThought]\n        });\n      }\n    }\n\n    this.setState({\n      account: accounts[0],\n      balance: balance,\n      latest: latest\n    });\n    this.setState({\n      loading: false\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '',\n      balance: '',\n      myString: '',\n      thoughts: [],\n      handle: 0,\n      loading: true\n    };\n    this.createThought = this.createThought.bind(this);\n    this.changeHandle = this.changeHandle.bind(this);\n    this.getOwnHandle = this.getOwnHandle.bind(this);\n    this.addFollow = this.addFollow.bind(this);\n  }\n\n  handleChangeRender() {\n    if (this.state.handle == 1) {\n      return React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"New user!\"));\n    } else if (this.state.handle == 2) {\n      return React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Worked!\"));\n    } else if (this.state.handle == 3) {\n      return React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Taken!\"));\n    }\n  }\n\n  async getOwnHandle() {\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n    const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS);\n    const accounts = await web3.eth.getAccounts();\n    let curHandle = \"\";\n    profile.methods.getOwnHandle().call({\n      from: accounts[0]\n    }).then(val => {\n      if (val === undefined || val === null || val === \"\") {\n        this.setState({\n          currentHandle: \"Anonymous\"\n        });\n      } else {\n        this.setState({\n          currentHandle: val\n        });\n      }\n    }, reason => {});\n  }\n\n  createThought(string) {\n    //const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n    this.setState({\n      loading: true\n    });\n    this.state.profile.methods.createThought(string).send({\n      from: this.state.account\n    }).once('receipt', receipt => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  async addFollow(followee) {\n    this.state.follow.methods.addFollower(followee).send({\n      from: this.state.account\n    });\n  }\n  /*changeHandle(string) {\n     this.setState({ loading: true })\n    this.state.profile.methods.updateUser(string).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n     console.log (\"Handle State: \" + this.state.handle + \" State Handle \")\n   }\n  */\n\n\n  async changeHandle(string) {\n    this.setState({\n      loading: true\n    });\n    this.state.profile.methods.updateUser(string).send({\n      from: this.state.account\n    }).then(function (result) {\n      //this.setState(\n      //{ loading: false})\n      var handleStore = result;\n      console.log(\"HERE! \" + handleStore);\n      alert(JSON.stringify(result, null, 4));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      bal: this.state.balance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"formDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \" Send a thought to the blockchain!\"), this.state.loading ? React.createElement(\"div\", {\n      id: \"loader\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Communicating with blockchain...\")) : React.createElement(Thought, {\n      thoughts: this.state.thoughts,\n      createThought: this.createThought,\n      hand: this.state.currentHandle,\n      acct: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      role: \"main\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Thoughts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), this.handleChangeRender()), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Public;","map":{"version":3,"sources":["/Users/reuben/Desktop/school/osu/capstone/synapse-project/src/pages/pub.js"],"names":["React","Component","Web3","logo","text","SYNAPSE_ABI","SYNAPSE_ADDRESS","PROFILE_ABI","PROFILE_ADDRESS","FOLLOW_ABI","FOLLOW_ADDRESS","Thought","Thoughts","ChangeHandle","Logo","isInstalled","console","log","isLocked","web3","eth","getAccounts","err","accounts","length","Public","componentWillMount","loadWeb3","loadBlockchainData","getOwnHandle","forceUpdate","componentDidMount","document","title","window","ethereum","enable","currentProvider","alert","componentWillUnmount","clearInterval","interval","givenProvider","synapse","Contract","profile","follow","setState","balanceWei","getBalance","thoughtCount","balance","methods","call","latestCall","thoughts","latest","thought","i","singleThought","state","account","loading","constructor","props","myString","handle","createThought","bind","changeHandle","addFollow","handleChangeRender","curHandle","from","then","val","undefined","currentHandle","reason","string","send","once","receipt","followee","addFollower","updateUser","result","handleStore","JSON","stringify","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport '../css/pub.css'\nimport logo from '../public/home/logo.png';\nimport text from '../public/home/text.png';\nimport { SYNAPSE_ABI, SYNAPSE_ADDRESS } from '../config'\nimport { PROFILE_ABI, PROFILE_ADDRESS } from '../config'\nimport { FOLLOW_ABI, FOLLOW_ADDRESS } from '../config'\nimport Thought from '../createThought'\nimport Thoughts from '../thoughts'\nimport ChangeHandle from '../changeHandle'\nimport Logo from '../components/logo.js'\n\n\n\nfunction isInstalled() {\n   if (typeof Web3 !== 'undefined'){\n      console.log('MetaMask is installed')\n   }\n   else{\n      console.log('MetaMask is not installed')\n   }\n}\n\nfunction isLocked(web3) {\n   web3.eth.getAccounts(function(err, accounts){\n      if (err != null) {\n         console.log(err)\n      }\n      else if (accounts.length === 0) {\n         console.log('MetaMask is locked')\n      }\n      else {\n         console.log('MetaMask is unlocked')\n      }\n   });\n}\n\n\nclass Public extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    await this.getOwnHandle()\n    this.forceUpdate()\n  }\n\n  componentDidMount(){\n    document.title = \"Synapse App\"\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async componentWillUnmount() {\n  clearInterval(this.interval);\n  }\n\n\n  async loadBlockchainData() {\n\n    const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n\n    //const web3 = new Web3(window.web3.currentProvider);\n\n    isInstalled();\n    isLocked(web3);\n\n    //await ethereum.enable();\n\n    const synapse = new web3.eth.Contract(SYNAPSE_ABI, SYNAPSE_ADDRESS)\n    const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n    const follow = new web3.eth.Contract(FOLLOW_ABI, FOLLOW_ADDRESS)\n\n    this.setState({ follow })\n\n    const accounts = await web3.eth.getAccounts()\n    const balanceWei = await web3.eth.getBalance(accounts[0])\n\n    this.setState({ profile })\n    this.setState({ thoughtCount })\n\n    var balance = balanceWei/1000000000000000000\n\n    var thoughtCount = await profile.methods.thoughtCount().call()\n\n    const latestCall = await profile.methods.thoughts(thoughtCount-1).call()\n    const latest = latestCall.thought\n\n\n    if (thoughtCount < 5) {\n      for (var i = thoughtCount-1; i >= 0; i--) {\n        const singleThought = await profile.methods.thoughts(i).call()\n        this.setState({\n          thoughts: [...this.state.thoughts, singleThought]\n          //thoughts: [...this.setState({thoughts: [...this.state.thoughts, singleThought]})]\n        })\n      }\n    }\n    else {\n      for (var i = thoughtCount-1; i >= (thoughtCount-5); i--) {\n        const singleThought = await profile.methods.thoughts(i).call()\n        this.setState({\n          thoughts: [...this.state.thoughts, singleThought]\n        })\n      }\n    }\n\n\n    this.setState({ account: accounts[0], balance: balance, latest: latest })\n    this.setState({ loading: false })\n\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      balance: '',\n      myString: '',\n      thoughts: [],\n      handle: 0,\n      loading: true\n\n    }\n    this.createThought = this.createThought.bind(this)\n    this.changeHandle = this.changeHandle.bind(this)\n    this.getOwnHandle = this.getOwnHandle.bind(this)\n    this.addFollow = this.addFollow.bind(this)\n  }\n\n\n  handleChangeRender() {\n    if (this.state.handle == 1) {\n      return <div id=\"loader\" className=\"\"><p className=\"\">New user!</p></div>\n    }\n\n    else if (this.state.handle == 2) {\n      return <div id=\"loader\" className=\"\"><p className=\"\">Worked!</p></div>\n    }\n\n    else if (this.state.handle == 3) {\n      return <div id=\"loader\" className=\"\"><p className=\"\">Taken!</p></div>\n    }\n  }\n\n  async getOwnHandle() {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\")\n      const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n      const accounts = await web3.eth.getAccounts()\n\n      let curHandle = \"\";\n\n      profile.methods.getOwnHandle().call({ from: accounts[0]}).then(val => {\n          if (val === undefined || val === null || val === \"\")\n          {\n            this.setState({ currentHandle: \"Anonymous\" });\n          }\n          else\n          {\n              this.setState({ currentHandle: val });\n          }\n      }, reason => {});\n  }\n\n  createThought(string) {\n\n    //const profile = new web3.eth.Contract(PROFILE_ABI, PROFILE_ADDRESS)\n\n    this.setState({ loading: true })\n    this.state.profile.methods.createThought(string).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState(\n        { loading: false})\n    })\n\n  }\n\n\n  async addFollow(followee) {\n\n    this.state.follow.methods.addFollower(followee).send({ from: this.state.account })\n\n  }\n\n  /*changeHandle(string) {\n\n    this.setState({ loading: true })\n    this.state.profile.methods.updateUser(string).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n\n    console.log (\"Handle State: \" + this.state.handle + \" State Handle \")\n\n  }\n  */\n\n  async changeHandle(string) {\n\n    this.setState({ loading: true })\n    this.state.profile.methods.updateUser(string).send({ from: this.state.account })\n    .then(function(result) {\n      //this.setState(\n        //{ loading: false})\n        var handleStore = result\n        console.log (\"HERE! \" + handleStore)\n        alert(JSON.stringify(result, null, 4));\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Logo\n          bal={this.state.balance}\n          />\n        <div className = \"formDiv\">\n          <br />\n          <p> Send a thought to the blockchain!</p>\n\n          { this.state.loading\n            ? <div id=\"loader\" className=\"\"><p className=\"\">Communicating with blockchain...</p></div>\n            : <Thought\n              thoughts={this.state.thoughts}\n              createThought={this.createThought}\n              hand = {this.state.currentHandle}\n              acct = {this.state.account}\n             />\n\n          }\n\n        </div>\n\n{/*\n        <table id=\"t01\">\n          <tr>\n            <th><p>Account: </p></th>\n            <th><p>{this.state.account}</p></th>\n          </tr>\n          <tr>\n            <th><p>Balance: </p></th>\n            <th><p>{this.state.balance}</p></th>\n          </tr>\n        </table>\n*/}\n\n          <main role=\"main\" className=\"\">\n\n              <Thoughts\n              />\n\n              <br />\n\n              {/*\n              <ChangeHandle\n                changeHandle={this.changeHandle}\n               />\n               */ }\n\n\n               {this.handleChangeRender()}\n\n\n\n            </main>\n\n            <p></p>\n{/*\n          <ul>\n              { this.state.thoughts.map((thought, key) => {\n                return(\n                  <div key={key}>\n                    <label>\n                      <span>{thought.thought}</span>\n                      <span> &nbsp; &nbsp; </span>\n                      <span>{thought.user}</span>\n                    </label>\n                  </div>\n                )\n              })}\n            </ul>\n*/}\n        </header>\n      </div>\n\n\n    );\n  }\n}\n\nexport default Public;\n"]},"metadata":{},"sourceType":"module"}